# LOVE Multiplatform GitLab CI

# Fill in the project info
variables:
        PROJECT: demonizer
        PROJECT_TITLE: Demonizer
        PROJECT_TITLE_NOSPACE: Demonizer
        DESCRIPTION: "Demonic corruption fantasy shmup"
        COPYRIGHT: "Â© 2018 IoriBranford"
        APPLICATION_ID_BASE: "io.itch.ioribranford.demonizer"
        LOVE_VERSION: "0.10.2"
        SCREEN_ORIENTATION: "sensorPortrait"
        GAME_TYPE: full
        VERSION: "${CI_COMMIT_REF_NAME}"
        GIT_DEPTH: "1"
        # GIT_SUBMODULE_STRATEGY: recursive
        # broken by https://gitlab.com/gitlab-org/gitlab-ci-multi-runner/issues/2148

# Fill in the demo info if providing a demo
.demo:
        <<: &demo
                only:
                        - master
                        - /demo/
        variables:
                <<: &demo-variables
                        PROJECT_TITLE: "Demonizer Demo"
                        PROJECT_TITLE_NOSPACE: "Demonizer_Demo"
                        GAME_TYPE: demo

.full:
        <<: &full
                except:
                        - /demo/

stages:
        - build

image: alpine:latest

before_script:
        - apk add --update git zip luajit
        - git submodule sync --recursive
        - git submodule update --init --recursive
          # workaround https://gitlab.com/gitlab-org/gitlab-ci-multi-runner/issues/2148

.debian:
        <<: &debian
                before_script:
                        - apt-get update
                        - apt-get install -y -qq git zip luajit
                        - git submodule sync --recursive
                        - git submodule update --init --recursive

.build-data: &build-data
        stage: build
        script:
                - apk add wget xz
                - ./make-game.sh
                - mv ${GAME_TYPE}.love "${PROJECT}-${GAME_TYPE}.love"
        artifacts:
                name: "${PROJECT}-${VERSION}-data"
                paths:
                        - "${PROJECT}-${GAME_TYPE}.love"
                expire_in: 1 week

.build-linux: &build-linux
        <<: *debian
        stage: build
        image: debian:stretch-slim
        script:
                - apt-get install -y -qq file wget fuse libglib2.0-0
                - ./make-game.sh
                - ./make-linux.sh
        cache:
                key: "${PROJECT}-linux-${ARCH}"
                paths:
                        - "love-${LOVE_VERSION}-${ARCH}.AppImage"
                        - "appimagetool-${ARCH}.AppImage"
                        - "*.deb"
        artifacts:
                name: "${PROJECT}-${VERSION}-linux-${ARCH}"
                paths:
                        - ${PROJECT_TITLE_NOSPACE}-${ARCH}.AppImage
                expire_in: 1 week

.build-windows: &build-windows
        <<: *debian
        image: tianon/wine
        stage: build
        variables:
                ARCH_BITS: "64"
        script:
                - apt-get install -y -qq wget xz-utils xvfb
                - ./make-game.sh
                - ./make-windows.sh
        cache:
                key: "${PROJECT}-win${ARCH_BITS}"
                paths:
                        - "love-${LOVE_VERSION}-win${ARCH_BITS}.zip"
                        - "resource_hacker.zip"
        artifacts:
                name: "${PROJECT}-${VERSION}-win${ARCH_BITS}"
                paths:
                        - "${PROJECT_TITLE}"
                expire_in: 1 week

.build-macosx: &build-macosx
        <<: *debian
        stage: build
        image: andrewd/osxcross
        variables:
                CFBundleIdentifier: "${APPLICATION_ID_BASE}"
                <<: &build-macosx-variables
                        NSHumanReadableCopyright: "${COPYRIGHT}"
                        INSTALL_NAME_TOOL: x86_64-apple-darwin12-install_name_tool
        script:
                - apt-get install -y -qq wget xz-utils
                - ./make-game.sh
                - ./make-macosx.sh
        cache:
                key: "${PROJECT}-macosx"
                paths:
                        - "love-${LOVE_VERSION}-macosx-x64.zip"
                        - "game-music-emu-0.6.1.yosemite.bottle.tar.gz"
        artifacts:
                name: "${PROJECT}-${VERSION}-macosx"
                paths:
                        - "${PROJECT_TITLE}.app"
                expire_in: 1 week

.build-android: &build-android
        <<: *debian
        stage: build
        image: lakoo/android-ndk:26-28.0.2-r17b
        variables:
                APPLICATION_ID: "${APPLICATION_ID_BASE}"
        script:
                - apt-get install -y -qq make file
                - ./make-game.sh
                - ./configure-android.sh
                - ./make-android.sh
        cache:
                key: "${PROJECT}-android"
                paths:
                        - love-android-sdl2
        artifacts:
                name: "${PROJECT}-${VERSION}-android"
                paths:
                        - "${PROJECT_TITLE_NOSPACE}.apk"
                expire_in: 1 week

full-data:
        <<: *build-data
        <<: *full

full-lin64:
        <<: *build-linux
        <<: *full
        variables:
                ARCH: "x86_64"

full-lin32:
        <<: *build-linux
        <<: *full
        image: i386/debian:stretch-slim
        variables:
                ARCH: "i686"

full-win64:
        <<: *build-windows
        <<: *full

full-win32:
        <<: *build-windows
        <<: *full
        variables:
                ARCH_BITS: "32"

full-macosx:
        <<: *build-macosx
        <<: *full

full-android:
        <<: *build-android
        <<: *full

demo-data:
        <<: *build-data
        <<: *demo
        variables:
                <<: *demo-variables

demo-lin64:
        <<: *build-linux
        <<: *demo
        variables:
                ARCH: "x86_64"
                <<: *demo-variables

demo-lin32:
        <<: *build-linux
        <<: *demo
        image: i386/debian:stretch-slim
        variables:
                ARCH: "i686"
                <<: *demo-variables

demo-win64:
        <<: *build-windows
        <<: *demo
        variables:
                <<: *demo-variables
                ARCH_BITS: "64"

demo-win32:
        <<: *build-windows
        <<: *demo
        variables:
                <<: *demo-variables
                ARCH_BITS: "32"

demo-macosx:
        <<: *build-macosx
        <<: *demo
        variables:
                <<: *demo-variables
                <<: *build-macosx-variables
                CFBundleIdentifier: "${APPLICATION_ID_BASE}demo"

demo-android:
        <<: *build-android
        <<: *demo
        variables:
                <<: *demo-variables
                APPLICATION_ID: "${APPLICATION_ID_BASE}demo"
